#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Agency Management System
# –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å sudo –ø—Ä–∞–≤–∞–º–∏

set -e

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Agency Management System"

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt install -y \
    curl \
    wget \
    git \
    htop \
    nano \
    unzip \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π GPG –∫–ª—é—á Docker
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    sudo usermod -aG docker $USER
    
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
    
    DOCKER_COMPOSE_VERSION="v2.20.2"
    sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall
echo "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
sudo ufw --force enable
sudo ufw allow ssh
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
echo "‚úÖ Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
sudo mkdir -p /data/agency/{static,contracts,files,backups}
sudo chown -R $USER:$USER /data/agency
chmod -R 755 /data/agency

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if ! id "agency" &>/dev/null; then
    echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    sudo useradd -r -s /bin/false -d /data/agency agency
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd service –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
echo "‚öôÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ systemd service..."
sudo tee /etc/systemd/system/agency-app.service > /dev/null <<EOF
[Unit]
Description=Agency Management System
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=/opt/agency-app
ExecStart=/usr/local/bin/docker-compose -f docker-compose.production.yml up -d
ExecStop=/usr/local/bin/docker-compose -f docker-compose.production.yml down
TimeoutStartSec=0
User=$USER
Group=$USER

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥—Ä–æ—Ç–∞—Ü–∏—é
echo "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥—Ä–æ—Ç–∞—Ü–∏–∏..."
sudo tee /etc/logrotate.d/agency-app > /dev/null <<EOF
/var/log/agency-app/*.log {
    daily
    missingok
    rotate 30
    compress
    delaycompress
    notifempty
    create 644 $USER $USER
    postrotate
        docker-compose -f /opt/agency-app/docker-compose.production.yml restart
    endscript
}
EOF

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –±—ç–∫–∞–ø–∞
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±—ç–∫–∞–ø–∞..."
sudo tee /usr/local/bin/agency-backup.sh > /dev/null <<'EOF'
#!/bin/bash
BACKUP_DIR="/data/agency/backups"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="agency_backup_${TIMESTAMP}.tar.gz"

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
cd /data/agency
tar -czf "${BACKUP_DIR}/${BACKUP_FILE}" \
    --exclude="backups" \
    --exclude="*.log" \
    .

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
find "${BACKUP_DIR}" -name "agency_backup_*.tar.gz" -mtime +30 -delete

echo "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: ${BACKUP_DIR}/${BACKUP_FILE}"
EOF

sudo chmod +x /usr/local/bin/agency-backup.sh

# –î–æ–±–∞–≤–ª—è–µ–º cron –∑–∞–¥–∞—á—É –¥–ª—è –±—ç–∫–∞–ø–∞
echo "‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞..."
(crontab -l 2>/dev/null; echo "0 2 * * * /usr/local/bin/agency-backup.sh") | crontab -

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:"
echo "1. –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: newgrp docker"
echo "2. –°–∫–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ /opt/agency-app"
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª"
echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./deploy.sh production"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:     sudo systemctl status agency-app"
echo "  –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞:     sudo systemctl start agency-app"
echo "  –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫:         sudo systemctl enable agency-app"
echo "  –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø:      /usr/local/bin/agency-backup.sh"
echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:     sudo journalctl -u agency-app -f"
EOF