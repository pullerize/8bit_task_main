server {
    listen 80;
    server_name 109.196.99.149;  # ← подставьте домен или IP

    # Статика фронтенда (dist смонтирован в /usr/share/nginx/html)
    root /usr/share/nginx/html;
    index index.html;

    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/javascript application/json application/xml image/svg+xml;

    # Кэш статических ассетов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # SPA-роутинг
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API → контейнер backend (внутренняя сеть docker)
    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
    }

    # (опционально) CORS, если фронт и API на разных доменах
    # add_header Access-Control-Allow-Origin * always;
    # add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    # add_header Access-Control-Allow-Headers * always;
    # if ($request_method = OPTIONS) { return 204; }

    # Базовые заголовки безопасности
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    # add_header Content-Security-Policy "default-src 'self'" always; # настройте под ваш фронт
}
 